------------ACCESO A NODOS-------------
.getElementsByClassName(clase)
.getElementsByTagName(elemento):
.querySelector(selector): devuelve el primer nodo encontrado
.querySelectorAll(selector):  devuelve  una  NodeList 


Atajos 
También tenemos ‘atajos’ para obtener algunos elementos comunes: 
• document.documentElement: devuelve el nodo del elemento <html> 
• document.head: devuelve el nodo del elemento <head> 
• document.body: devuelve el nodo del elemento <body> 
• document.title: devuelve el nodo del elemento <title> 
• document.link: devuelve una colección con todos los hiperenlaces del documento 
• document.anchor: devuelve una colección con todas las anclas del documento 
• document.forms: devuelve una colección con todos los formularios del documento 
• document.images: devuelve una colección con todas las imágenes del documento 
• document.scripts: devuelve una colección con todos los scripts del documento

elemento.childrem [1]  //numero de hijo


---------RELACION ENTRE NODOS-------

• elemento.parentElement: devuelve el elemento padre de elemento 
• elemento.children:  devuelve  la  colección  con  todos  los  elementos  hijo  de elemento (sólo  elementos HTML, no comentarios ni nodos de tipo texto) 
• elemento.childNodes: devuelve la colección con todos los hijos de elemento, incluyendo comentarios y nodos de tipo texto por lo que no suele utilizarse 
• elemento.firstElementChild: devuelve el elemento HTML que es el primer hijo de elemento 
• elemento.firstChild:  devuelve  el  nodo  que  es  el  primer  hijo  de elemento (incluyendo  nodos  de  tipo texto o comentarios) 
• elemento.lastElementChild, elemento.lastChild: igual pero con el último hijo 
• elemento.nextElementSibling: devuelve el elemento HTML que es el siguiente hermano de elemento 
• elemento.nextSibling:  devuelve  el  nodo  que  es  el siguiente  hermano  de elemento (incluyendo  nodos de tipo texto o comentarios) 
• elemento.previousElementSibling, elemento.previousSibling: igual pero con el hermano anterior 
• elemento.hasChildNodes: indica si elemento tiene o no nodos hijos 
• elemento.childElementCount: devuelve el nº de nodos hijo de elemento


----------PROPIEDADES DEL NODO--------------

elemento.innerHTML:         //contenico CON ETIQUETAS
elemento.textContent        //contenico SIN ETIQUETAS
elemento.innerText:         //igual que textContent 
elemento.value:             //devuelve la propiedad ‘value’ de un <input> 

elemento.focus: / elemento.blur  //pone o quita el foco
elemento.clientHeight / elemento.clientWidth: devuelve el alto / ancho visible del elemento 
elemento.offsetHeight / elemento.offsetWidth: devuelve el alto / ancho total del elemento 
elemento.clientLeft / elemento.clientTop: devuelve la distancia de elemento al borde izquierdo / borde superior 
elemento.offsetLeft / elemento.offsetTop:  devuelve  los  píxels  que  hemos  desplazado elemento a  la  izquierda / abajo


----------MANIPULAR DOM--------

1. ELEMENTOS y CONTENIDO
document.createElement('etiqueta'):     //crea un nuevo elemento 
document.createTextNode('texto'):       //TEXTO dentro del elemento
elemento.appendChild(nuevoNodo):        // añade el texto  O  elemento, segun lo q se pase por parametro. Será el ULTIMO EN ORDEN

elemento.insertBefore(nuevoNodo, nodo): //añade 'nuevoNodo' como hijo antes de 'nodo' 
elemento.removeChild(nodo)              //Elimina el nodo
elemento.replaceChild(nuevoNodo, viejoNodo)
elementoAClonar.cloneNode(boolean):  devuelve  un  clon  de elementoAClonar , true incluye  todos sus descendientes , false no

//appendChild(nuevoNodo) Cuidado, movería el nodo si pongo su ruta eliminandolo de su origen, para hacer copia utilizar cloneNode

elemento.before(nuevoNodo): añade el nuevoNodo pasado antes del nodo elemento 
elemento.after(nuevoNodo): añade el nuevoNodo pasado después del nodo elemento 
elemento.replaceWith(nuevoNodo): reemplaza el nodo elemento con el nuevoNodo pasado 
elemento.remove(): elimina el nodo elemento

2. ATRIBUTOS, clases, estilos
elemento.attributes: devuelve un array con todos los atributos
elemento.hasAttribute('nombreAtributo'): indica si elemento tiene o no
elemento.getAttribute('nombreAtributo'): devuelve el valor   //Para muchos elementos este valor puede directamente con elemento.atributo
elemento.setAttribute('nombreAtributo', 'valor')     //También puede cambiarse el valor directamente con elemento.atributo=valor.
elemento.removeAttribute('nombreAtributo')

//PARA estilos  ---------> Utilizar camelCase
miPrimeraLista.style.backgroundColor = 'red';           //Lo normal es cambiar la clase y no el estilo

elemento.classList.add('nuevaclase')   //Añade nueva clase
elemento.classList.remove('clase')   //Elimina clase
elemento.classList.toogle('clase')   //Elimina si la tiene la añade si no la tiene
elemento.classList.contains('direccion');  //devuekve true o false
elemento.classList.replace(oldClase, newClase)



